package main

import (
	"fmt"
	"strconv"
)

/*
Василий постоянно забывает не только ПИН-коды от банковских карт,
но и пароли от различных онлайн-сервисов.
Чтобы победить свою забывчивость, он решил выработать для себя такое правило
придумывания паролей:
каждый пароль должен состоять из четного количества символов,
и при этом первая половина пароля должна быть «анаграммно меньше» второй его половины.
Теперь Василию нужен алгоритм, проверяющий, удовлетворяет ли придуманный пароль
заданному условию.
Вам дано n пар строк одинаковой длины (каждая строка – половина пароля).

Строка s считается анаграммно меньше строки t, если существуют строка s' и строка t'
такие что:
s' получается из s перестановкой букв
t' получается из t перестановкой букв
s' лексикографически меньше, чем t'

Для каждой пары строк si, ti определите правда ли, что si анаграммно меньше чем ti.
*/

func main() {
	var input int
	fmt.Scanf("%d", &input)

	delta := 0
	for !IsPalindrom(input + delta) {
		delta++
	}

	fmt.Println(delta)
}

func IsPalindrom(number int) bool {
	str := strconv.Itoa(number)
	for i := 0; i < len(str)/2; i++ {
		if str[i] != str[len(str)-i-1] {
			return false
		}
	}
	return true
}
